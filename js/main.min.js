let restaurants,neighborhoods,cuisines
var map
var markers=[];function register_sw(){if(!navigator.serviceWorker)
return;navigator.serviceWorker.register('/sw.js').then(function(reg){console.log("Registered!")}).catch(function(){console.log("Registration Failed!")})}
register_sw();document.addEventListener('DOMContentLoaded',(event)=>{fetchNeighborhoods();fetchCuisines()});fetchNeighborhoods=()=>{DBHelper.fetchNeighborhoods((error,neighborhoods)=>{if(error){console.error(error)}else{self.neighborhoods=neighborhoods;fillNeighborhoodsHTML()}})}
fillNeighborhoodsHTML=(neighborhoods=self.neighborhoods)=>{const select=document.getElementById('neighborhoods-select');neighborhoods.forEach(neighborhood=>{const option=document.createElement('option');option.innerHTML=neighborhood;option.value=neighborhood;select.append(option)})}
fetchCuisines=()=>{DBHelper.fetchCuisines((error,cuisines)=>{if(error){console.error(error)}else{self.cuisines=cuisines;fillCuisinesHTML()}})}
fillCuisinesHTML=(cuisines=self.cuisines)=>{const select=document.getElementById('cuisines-select');cuisines.forEach(cuisine=>{const option=document.createElement('option');option.innerHTML=cuisine;option.value=cuisine;select.append(option)})}
window.initMap=()=>{let loc={lat:40.722216,lng:-73.987501};self.map=new google.maps.Map(document.getElementById('map'),{zoom:12,center:loc,scrollwheel:!1});updateRestaurants()}
updateRestaurants=()=>{const cSelect=document.getElementById('cuisines-select');const nSelect=document.getElementById('neighborhoods-select');const cIndex=cSelect.selectedIndex;const nIndex=nSelect.selectedIndex;const cuisine=cSelect[cIndex].value;const neighborhood=nSelect[nIndex].value;DBHelper.fetchRestaurantByCuisineAndNeighborhood(cuisine,neighborhood,(error,restaurants)=>{if(error){console.error(error)}else{resetRestaurants(restaurants);fillRestaurantsHTML()}})}
resetRestaurants=(restaurants)=>{self.restaurants=[];const ul=document.getElementById('restaurants-list');ul.innerHTML='';self.markers.forEach(m=>m.setMap(null));self.markers=[];self.restaurants=restaurants}
fillRestaurantsHTML=(restaurants=self.restaurants)=>{const ul=document.getElementById('restaurants-list');restaurants.forEach(restaurant=>{ul.append(createRestaurantHTML(restaurant))});lazy_load();addMarkersToMap()}
createRestaurantHTML=(restaurant)=>{const li=document.createElement('li');const pic=document.createElement("picture");pic.className="lozad";pic["data-iesrc"]=DBHelper.imageUrlForRestaurant_small(restaurant);const source1=document.createElement("source");source1.media="(min-width: 1180px)";source1.srcset=DBHelper.imageUrlForRestaurant_small(restaurant);pic.append(source1);const source2=document.createElement("source");source2.media="(min-width: 744px)";source2.srcset=DBHelper.imageUrlForRestaurant_medium(restaurant);pic.append(source2);const source3=document.createElement("source");source3.media="(max-width: 743px)";source3.srcset=DBHelper.imageUrlForRestaurant_large(restaurant);pic.append(source3);li.append(pic);const name=document.createElement('h2');name.innerHTML=restaurant.name;li.append(name);const neighborhood=document.createElement('p');neighborhood.innerHTML=restaurant.neighborhood;li.append(neighborhood);const address=document.createElement('p');address.innerHTML=restaurant.address;li.append(address);const more=document.createElement('a');more.innerHTML='View Details';more.setAttribute('aria-label','View details of '+restaurant.name);more.href=DBHelper.urlForRestaurant(restaurant);li.append(more)
const rev=document.createElement('a');rev.innerHTML='Add Review';rev.setAttribute('aria-label','Add Review To '+restaurant.name);rev.setAttribute('class','btn_add_rev');rev.href=`./add_review.html?id=${restaurant.id}`;li.append(rev)
return li}
addMarkersToMap=(restaurants=self.restaurants)=>{restaurants.forEach(restaurant=>{const marker=DBHelper.mapMarkerForRestaurant(restaurant,self.map);google.maps.event.addListener(marker,'click',()=>{window.location.href=marker.url});self.markers.push(marker)})}
function lazy_load(){const observer=lozad();observer.observe()}
